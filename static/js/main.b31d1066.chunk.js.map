{"version":3,"sources":["Components/Pieces/moveConstructor.js","Components/Pieces/King.js","Components/Pieces/Queen.js","Components/Pieces/Bishop.js","Components/Pieces/Rook.js","Components/Pieces/Pawn.js","Components/Pieces/Knight.js","Components/Board/Piece.js","Components/Board/Square.js","Components/Board/Board.js","Redux/reducers/piecePositions.js","Components/Game.js","Redux/reducers/squareValues.js","Redux/reducers/index.js","Redux/reducers/movePiece.js","Redux/store.js","index.js"],"names":["getDiagonalMoves","row","column","upperLimit","possiblePos","maxMovesUp","Math","min","max","maxMovesDown","i","push","getHorizontalMoves","maxMovesRight","maxMovesLeft","getVerticalMoves","isValidCell","King","props","color","image","state","cellNumber","number","this","possiblePositions","src","Component","Queen","getValidPositions","Bishop","Rook","Pawn","Knight","getKnightMoves","componentMapping","black_king","white_king","black_queen","white_queen","black_bishop","white_bishop","black_knight","white_knight","black_rook","white_rook","black_pawn","white_pawn","Piece","key","piece","type","style","fontSize","_","require","Square","initialPiecePosition","dispatch","payload","position","finalPiecePosition","movePiece","selectSquare","squareValues","isEmpty","isSelectedCell","get","squareValue","selectedCSS","className","onClick","connect","Board","squares","initializeBoard","board","slice","constructBoard","initialState","king","black","remaining","1","white","queen","rook","2","bishop","knight","pawn","3","4","5","6","7","8","Game","setPieces","j","piecePositions","Object","keys","forEach","pVal","pNum","constructPayload","pieceVal","mat","Array","getInitialSquareValues","squareValuesReducer","action","valueToFill","newState","cloneDeep","valueToEmpty","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b31d1066.chunk.js","sourcesContent":["export const getDiagonalMoves = (row, column, upperLimit=10) => {\r\n    let possiblePos = [];\r\n    const maxMovesUp = Math.min(7-Math.max(row, column),upperLimit);\r\n    const maxMovesDown = Math.min(Math.min(row,column), upperLimit);\r\n    for(let i=0;i<=maxMovesUp;i++){\r\n        possiblePos.push({\r\n            row: row+i,\r\n            column: column+i\r\n        });\r\n    }\r\n    for(let i=1;i<maxMovesDown;i++){\r\n        possiblePos.push({\r\n            row: row-i,\r\n            column: column-i\r\n        });\r\n    }\r\n    return possiblePos;\r\n}\r\n\r\nexport const getHorizontalMoves = (row, column, upperLimit=10) => {\r\n    let possiblePos = [];\r\n    const maxMovesRight = Math.min(7-column, upperLimit);\r\n    const maxMovesLeft = Math.min(column, upperLimit);\r\n    for(let i=0;i<maxMovesRight;i++){\r\n        possiblePos.push({\r\n            row,\r\n            column: column+i\r\n        });\r\n    }\r\n    for(let i=1;i<maxMovesLeft;i++){\r\n        possiblePos.push({\r\n            row,\r\n            column: column-i\r\n        });\r\n    }\r\n    return possiblePos;\r\n}\r\n\r\nexport const getVerticalMoves = (row, column, upperLimit=10) => {\r\n    let possiblePos = [];\r\n    const maxMovesUp = Math.min(7-row, upperLimit);\r\n    const maxMovesDown = Math.min(row, upperLimit);\r\n    for(let i=0;i<maxMovesUp;i++){\r\n        possiblePos.push({\r\n            row: row+i,\r\n            column\r\n        });\r\n    }\r\n    for(let i=1;i<maxMovesDown;i++){\r\n        possiblePos.push({\r\n            row: row-i,\r\n            column\r\n        });\r\n    }\r\n    return possiblePos;\r\n}\r\n\r\nexport const isValidCell = (row, column) => {\r\n    return (row<8&&column<8) && (row>=0&&column>=0);\r\n}\r\n\r\nexport const getKnightMoves = (row, column) => {\r\n    let possiblePos = [];\r\n    possiblePos.push({\r\n        row,\r\n        column\r\n    });\r\n    if(isValidCell(row+2, column+1))\r\n        possiblePos.push({\r\n            row: row+2,\r\n            column: column+1\r\n        });\r\n    if(isValidCell(row+2, column-1))\r\n        possiblePos.push({\r\n            row: row+2,\r\n            column: column-1\r\n        })\r\n    if(isValidCell(row-2, column+1))\r\n        possiblePos.push({\r\n            row: row-2,\r\n            column: column+1\r\n        })\r\n    if(isValidCell(row-2, column-1))\r\n        possiblePos.push({\r\n            row: row-2,\r\n            column: column-1\r\n        })\r\n    return possiblePos;\r\n}","import React, { Component } from 'react';\r\nimport { getVerticalMoves, getDiagonalMoves, getHorizontalMoves } from './moveConstructor';\r\n\r\nclass King extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = this.props.color;\r\n        this.image = this.color === 'black'? \r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Chess_kdt45.svg/45px-Chess_kdt45.svg.png':\r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Chess_klt45.svg/45px-Chess_klt45.svg.png';\r\n        this.state = {\r\n            cellNumber:     this.props.number,\r\n            row:            this.props.row,\r\n            column:         this.props.column\r\n        }\r\n    }\r\n    \r\n    getValidPositions(){\r\n        const row = this.state.row, column = this.state.column;\r\n        let possiblePositions = [];\r\n        possiblePositions = [...possiblePositions, ...getDiagonalMoves(row, column, 1)];\r\n        possiblePositions = [...possiblePositions, ...getVerticalMoves(row, column, 1)];\r\n        possiblePositions = [...possiblePositions, ...getHorizontalMoves(row, column, 1)];\r\n        return possiblePositions;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.image} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default King;","import React, { Component } from 'react';\r\nimport {getDiagonalMoves, getHorizontalMoves, getVerticalMoves} from \"./moveConstructor\"\r\n\r\nclass Queen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = this.props.color;\r\n        this.image = this.color === 'black'? \r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Chess_qdt45.svg/45px-Chess_qdt45.svg.png':\r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Chess_qlt45.svg/45px-Chess_qlt45.svg.png';\r\n        this.state = {\r\n            cellNumber:     this.props.number,\r\n            row:            this.props.row,\r\n            column:         this.props.column\r\n        }\r\n    }\r\n\r\n    getValidPositions = () => {\r\n        const row = this.state.row, column = this.state.column;\r\n        let possiblePos = [];\r\n        possiblePos = [...possiblePos, ...getDiagonalMoves(row,column)];\r\n        possiblePos = [...possiblePos, ...getHorizontalMoves(row, column)];\r\n        possiblePos = [...possiblePos, ...getVerticalMoves(row, column)];\r\n        return possiblePos;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.image} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Queen;","import React, { Component } from 'react';\r\nimport {getDiagonalMoves} from \"./moveConstructor\"\r\n\r\nclass Bishop extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = this.props.color;\r\n        this.image = this.color === 'black'? \r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Chess_bdt45.svg/45px-Chess_bdt45.svg.png':\r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Chess_blt45.svg/45px-Chess_blt45.svg.png'\r\n        this.state = {\r\n            cellNumber:     this.props.number,\r\n            row:            this.props.row,\r\n            column:         this.props.column\r\n        }\r\n    }\r\n\r\n    getValidPositions(){\r\n        const row = this.state.row, column = this.state.column;\r\n        return getDiagonalMoves(row, column);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.image} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bishop;","import React, { Component } from 'react';\r\nimport { getHorizontalMoves, getVerticalMoves } from './moveConstructor';\r\n\r\nclass Rook extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = this.props.color;\r\n        this.image = this.color === 'black'? \r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Chess_rdt45.svg/45px-Chess_rdt45.svg.png':\r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Chess_rlt45.svg/45px-Chess_rdt45.svg.png';\r\n        this.state = {\r\n            cellNumber:     this.props.number,\r\n            row:            this.props.row,\r\n            column:         this.props.column\r\n        }\r\n    }\r\n\r\n    getValidPositions(){\r\n        const row= this.state.row, column = this.state.column;\r\n        let possiblePositions = [];\r\n        possiblePositions = [...possiblePositions, ...getHorizontalMoves(row, column)];\r\n        possiblePositions = [...possiblePositions, ...getVerticalMoves(row, column)];\r\n        return possiblePositions;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.image} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rook;","import React, { Component } from 'react';\r\n\r\nclass Pawn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = this.props.color;\r\n        this.image = this.color === 'black'? \r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Chess_pdt45.svg/45px-Chess_pdt45.svg.png':\r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Chess_plt45.svg/45px-Chess_plt45.svg.png';\r\n        this.state = {\r\n            cellNumber:     this.props.number,\r\n            row:            this.props.row,\r\n            column:         this.props.column\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.image} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pawn;","import React, { Component } from 'react';\r\nimport { getKnightMoves } from './moveConstructor';\r\n\r\nclass Knight extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = this.props.color;\r\n        this.image = this.color === 'black'? \r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Chess_ndt45.svg/45px-Chess_ndt45.svg.png':\r\n                    'https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Chess_nlt45.svg/45px-Chess_nlt45.svg.png';\r\n        this.state = {\r\n            cellNumber:     this.props.number,\r\n            row:            this.props.row,\r\n            column:         this.props.column\r\n        }\r\n    }\r\n    \r\n    getValidPositions(){\r\n        const row = this.state.row, column = this.state.column;\r\n        return getKnightMoves(row, column);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.image} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Knight;","import React, { Component } from 'react';\r\nimport King from '../Pieces/King';\r\nimport Queen from '../Pieces/Queen';\r\nimport Bishop from '../Pieces/Bishop';\r\nimport Rook from '../Pieces/Rook';\r\nimport Pawn from '../Pieces/Pawn';\r\nimport Knight from '../Pieces/Knight';\r\n\r\n\r\nconst componentMapping = {\r\n    black_king: <King color={'black'} />,\r\n    white_king: <King color={'white'} />,\r\n    black_queen: <Queen color={'black'} />,\r\n    white_queen: <Queen color={'white'}/>,\r\n    black_bishop: <Bishop color={'black'} />,\r\n    white_bishop:<Bishop color={'white'} />,\r\n    black_knight:<Knight color={'black'} />,\r\n    white_knight:<Knight color={'white'} />,\r\n    black_rook:<Rook color={'black'} />,\r\n    white_rook:<Rook color={'white'} />,\r\n    black_pawn:<Pawn color={'black'} />,\r\n    white_pawn:<Pawn color={'white'} />\r\n}\r\n\r\n\r\nclass Piece extends Component {\r\n    render() {\r\n        const key = `${this.props.piece.color}_${this.props.piece.type}`;\r\n        return (\r\n            <span style={{fontSize:'13px'}}>\r\n                {componentMapping[key]}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Piece;","import React, { Component } from 'react';\r\nimport \"./style.css\"\r\nimport Piece from './Piece';\r\nimport {connect} from 'react-redux';\r\nconst _ = require('lodash');\r\n\r\nclass Square extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.number =   this.props.number;\r\n        this.row    =   ~~(this.number/8);\r\n        this.column =   this.number%8;\r\n        this.color  =   (this.row*7+this.column)%2 ? 'black': 'white';\r\n    }\r\n    \r\n    initialPiecePosition = (piece) => {\r\n        this.props.dispatch({type: 'SET_MOVING_PIECE_INITIAL', payload:{\r\n            piece,\r\n            position:{\r\n                row: this.row,\r\n                column: this.column\r\n            }\r\n        }});\r\n    };\r\n\r\n    finalPiecePosition = () => {\r\n        const {piece, position} = this.props.movePiece;\r\n        this.props.dispatch({\r\n                type:'EMPTY_SQUARE', \r\n                payload:{\r\n                    row: position.row, column: position.column\r\n                }});\r\n        this.props.dispatch({type:'EMPTY_SQUARE', payload:{\r\n            row: this.row,\r\n            column: this.column,\r\n            piece\r\n        }});\r\n        \r\n        this.props.dispatch({type:'FILL_SQUARE', payload:{\r\n            row: this.row,\r\n            column: this.column,\r\n            piece\r\n        }});\r\n        this.props.dispatch({type: 'CLEAR_MOVING_PIECE'});\r\n    };\r\n\r\n    selectSquare = () => {\r\n        const {type, piece} = this.props.squareValues[this.row][this.column];\r\n        \r\n        if(!_.isEmpty(this.props.movePiece)){\r\n            this.finalPiecePosition();\r\n        }\r\n        else if(! _.isEmpty(piece)){\r\n            this.initialPiecePosition(piece);\r\n        }\r\n    }\r\n\r\n    isSelectedCell = () => {\r\n        const position = _.get(this.props.movePiece, 'position', {});\r\n        if(_.isEmpty(position))\r\n            return false;\r\n        else{\r\n            return position.row === this.row && position.column === this.column;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const squareValue = this.props.squareValues[this.row][this.column];\r\n        const {type, piece} = squareValue;\r\n        const selectedCSS = this.isSelectedCell() ? 'selected-square':'';\r\n        return (\r\n            <div className={`square  ${this.color} ${selectedCSS} same-row`} onClick={this.selectSquare}>\r\n                {\r\n                    type === 'piece' &&\r\n                    <Piece piece={piece} />\r\n                }\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        squareValues: state.squareValues,\r\n        movePiece: state.movePiece\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Square);","import React, { Component } from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: this.initializeBoard()\r\n        }\r\n    }\r\n\r\n    initializeBoard(){\r\n        let squares = [];\r\n        for(let i=0;i<64;i++){\r\n            squares[i] = <Square number={i} key={i}/>\r\n        }\r\n        return squares;\r\n    }\r\n\r\n    constructBoard(){\r\n        let board = [];\r\n        for(let row=0;row<8;row++){\r\n            board.push(\r\n                <div key={row}>\r\n                    {this.state.squares.slice(row*8, row*8+8)}\r\n                </div>\r\n            );\r\n        }\r\n        return board;\r\n    }\r\n    \r\n\r\n    render() {\r\n        const board = this.constructBoard();\r\n        return (\r\n            <div>\r\n                {board}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Board;","const initialState = {\r\n  king:{\r\n    black:{\r\n      remaining:1,\r\n      1:{\r\n      row:7,\r\n      column:3,\r\n      color: 'black',\r\n      type: 'king'\r\n      }\r\n    },\r\n    white:{\r\n      remaining:1,\r\n      1:{\r\n      row:0,\r\n      column:3,\r\n      color: 'white',\r\n      type: 'king'\r\n      }\r\n    }\r\n  },\r\n  queen:{\r\n    black:{\r\n      remaining:1,\r\n      1:{\r\n      row:7,\r\n      column:4,\r\n      color: 'black',\r\n      type: 'queen'\r\n      }\r\n    },\r\n    white:{\r\n      remaining:1,\r\n      1:{\r\n      row:0,\r\n      column:4,\r\n      color: 'white',\r\n      type: 'queen'\r\n      }\r\n    }\r\n  },\r\n  rook:{\r\n    black:{\r\n      remaining: 2,\r\n      1:{\r\n        row: 7,\r\n        column: 0,\r\n        color: 'black',\r\n        type: 'rook'\r\n      },\r\n      2:{\r\n        row: 7,\r\n        column: 7,\r\n        color: 'black',\r\n        type: 'rook'\r\n      }\r\n    },\r\n    white:{\r\n      remaining: 2,\r\n      1:{\r\n        row: 0,\r\n        column: 0,\r\n        color: 'white',\r\n        type: 'rook'\r\n      },\r\n      2:{\r\n        row: 0,\r\n        column: 7,\r\n        color: 'white',\r\n        type: 'rook'\r\n      }\r\n    }\r\n  },\r\n  bishop:{\r\n    black:{\r\n      remaining: 2,\r\n      1:{\r\n        row: 7,\r\n        column: 1,\r\n        color: 'black',\r\n        type: 'bishop'\r\n      },\r\n      2:{\r\n        row: 7,\r\n        column: 6,\r\n        color: 'black',\r\n        type: 'bishop'\r\n      }\r\n    },\r\n    white:{\r\n      remaining: 2,\r\n      1:{\r\n        row: 0,\r\n        column: 1,\r\n        color: 'white',\r\n        type: 'bishop'\r\n      },\r\n      2:{\r\n        row: 0,\r\n        column: 6,\r\n        color: 'white',\r\n        type: 'bishop'\r\n      }\r\n    }\r\n  },\r\n  knight:{\r\n    black:{\r\n      remaining: 2,\r\n      1:{\r\n        row: 7,\r\n        column: 2,\r\n        color: 'black',\r\n        type: 'knight'\r\n      },\r\n      2:{\r\n        row: 7,\r\n        column: 5,\r\n        color: 'black',\r\n        type: 'knight'\r\n      }\r\n    },\r\n    white:{\r\n      remaining: 2,\r\n      1:{\r\n        row: 0,\r\n        column: 2,\r\n        color: 'white',\r\n        type: 'knight'\r\n      },\r\n      2:{\r\n        row: 0,\r\n        column: 5,\r\n        color: 'white',\r\n        type: 'knight'\r\n      }\r\n    }\r\n  },\r\n  pawn:{\r\n    black:{\r\n      remaining: 8,\r\n      1:{\r\n        row: 6,\r\n        column: 0,\r\n        color:'black',\r\n        type:'pawn'\r\n      },\r\n      2:{\r\n        row: 6,\r\n        column: 1,\r\n        color:'black',\r\n        type:'pawn'\r\n      },\r\n      3:{\r\n        row: 6,\r\n        column: 2,\r\n        color:'black',\r\n        type:'pawn'\r\n      },\r\n      4:{\r\n        row: 6,\r\n        column: 3,\r\n        color:'black',\r\n        type:'pawn'\r\n      },\r\n      5:{\r\n        row: 6,\r\n        column: 4,\r\n        color:'black',\r\n        type:'pawn'\r\n      },\r\n      6:{\r\n        row: 6,\r\n        column: 5,\r\n        color:'black',\r\n        type:'pawn'\r\n      },\r\n      7:{\r\n        row: 6,\r\n        column: 6,\r\n        color:'black',\r\n        type:'pawn'\r\n      },\r\n      8:{\r\n        row: 6,\r\n        column: 7,\r\n        color:'black',\r\n        type:'pawn'\r\n      },\r\n    },\r\n    white:{\r\n      remaining: 8,\r\n      1:{\r\n        row: 1,\r\n        column: 0,\r\n        color:'white',\r\n        type:'pawn'\r\n      },\r\n      2:{\r\n        row: 1,\r\n        column: 1,\r\n        color:'white',\r\n        type:'pawn'\r\n      },\r\n      3:{\r\n        row: 1,\r\n        column: 2,\r\n        color:'white',\r\n        type:'pawn'\r\n      },\r\n      4:{\r\n        row: 1,\r\n        column: 3,\r\n        color:'white',\r\n        type:'pawn'\r\n      },\r\n      5:{\r\n        row: 1,\r\n        column: 4,\r\n        color:'white',\r\n        type:'pawn'\r\n      },\r\n      6:{\r\n        row: 1,\r\n        column: 5,\r\n        color:'white',\r\n        type:'pawn'\r\n      },\r\n      7:{\r\n        row: 1,\r\n        column: 6,\r\n        color:'white',\r\n        type:'pawn'\r\n      },\r\n      8:{\r\n        row: 1,\r\n        column: 7,\r\n        color:'white',\r\n        type:'pawn'\r\n      },\r\n    }\r\n  },\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Board from './Board/Board';\r\nimport {connect} from 'react-redux'\r\nimport piecePositions from '../Redux/reducers/piecePositions';\r\n\r\nclass Game extends Component {\r\n\r\n    constructPayload(piece){\r\n        const {row, column, color, type} = piece;\r\n        const pieceVal = {color,type};\r\n        return {row, column, pieceVal};\r\n    }\r\n\r\n    setPieces = () =>{\r\n        for(let i=0;i<8;i++){\r\n            for(let j=0;j<8;j++){\r\n                this.props.dispatch({type:'EMPTY_SQUARE', payload:{\r\n                    row: i,\r\n                    column: j\r\n                }})\r\n            }\r\n        }\r\n\r\n        const piecePositions = this.props.piecePositions;\r\n        const keys = Object.keys(piecePositions);\r\n        keys.forEach(key => {\r\n            const pieceValues = Object.keys(piecePositions[key]);\r\n            pieceValues.forEach(pVal => {\r\n                const pieceNumbers = Object.keys(piecePositions[key][pVal]);\r\n                pieceNumbers.forEach(pNum => {\r\n                    if(pNum !== 'remaining'){\r\n                        const piece = piecePositions[key][pVal][pNum];\r\n                        const {row, column, pieceVal} = this.constructPayload(piece);\r\n                        this.props.dispatch({type:'FILL_SQUARE', payload: {row, column, piece: pieceVal}});\r\n                    }\r\n                });\r\n                \r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>THis is the best isnt it</div>\r\n                <Board />\r\n                <button onClick={this.setPieces}>Initialize Board. Cmon babe. Let us do it</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        piecePositions: state.piecePositions,\r\n        squareValues: state.squareValues\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Game);","const _ = require('lodash');\r\n\r\nconst getInitialSquareValues = (row, column) => {\r\n    let mat = new Array(row);\r\n    for(let i = 0; i< column; i++)\r\n      mat[i] = new Array(column);\r\n    for(let i=0;i<row;i++){\r\n      for(let j=0;j<column;j++){\r\n        mat[i][j] = {\r\n          row: i,\r\n          column: j,\r\n          type: 'empty',\r\n          piece: {}\r\n        }\r\n      }\r\n    }\r\n    return mat;\r\n}\r\n\r\nconst initialState = getInitialSquareValues(8, 8);\r\n\r\nconst squareValuesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FILL_SQUARE':{\r\n      const valueToFill = action.payload;\r\n      let newState = _.cloneDeep(state);\r\n      const {row, column, piece} = valueToFill;\r\n      newState[row][column] =  {\r\n        ...state[row][column],\r\n        type: 'piece',\r\n        piece: {...piece}\r\n      }\r\n      return newState;\r\n    }\r\n    case 'EMPTY_SQUARE':{\r\n      const valueToEmpty = action.payload;\r\n      let newState = _.cloneDeep(state);\r\n      const {row, column} = valueToEmpty;\r\n      newState[row][column] =  {\r\n        ...state[row][column],\r\n        type: 'empty',\r\n        piece: {}\r\n      }\r\n      return newState;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default squareValuesReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport squareValues from \"./squareValues\";\r\nimport piecePositions from \"./piecePositions\";\r\nimport movePiece  from \"./movePiece\";\r\n\r\nexport default combineReducers({piecePositions, squareValues, movePiece});\r\n","export default function(state ={}, action){\r\n    switch(action.type){\r\n        case 'SET_MOVING_PIECE_INITIAL':{\r\n            return {\r\n                piece: action.payload.piece,\r\n                position: action.payload.position\r\n            };\r\n        }\r\n        case 'CLEAR_MOVING_PIECE':{\r\n            return {};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport Game from './Components/Game';\nimport store from './Redux/store';\n\nReactDOM.render(\n<Provider store={store}>\n    <Game />\n</Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}